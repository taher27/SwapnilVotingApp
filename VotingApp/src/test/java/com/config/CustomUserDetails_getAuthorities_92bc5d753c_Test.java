// Test generated by RoostGPT for test testJavaParserAst using AI Type Open AI and AI Model gpt-4

package com.config;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import com.model.Role;
import com.model.User;
import org.junit.Assert;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

public class CustomUserDetails_getAuthorities_92bc5d753c_Test {
    
    @Autowired
    private UserDetails userDetails;
    
    private User user;
    
    @BeforeEach
    public void setUp() {
        user = Mockito.mock(User.class);
    }
    
    @Test
    public void testGetAuthorities() {
        Role role1 = new Role();
        role1.setName("ROLE_USER");
        Role role2 = new Role();
        role2.setName("ROLE_ADMIN");
        
        List<Role> roles = new ArrayList<>();
        roles.add(role1);
        roles.add(role2);
        
        Mockito.when(user.getRoles()).thenReturn(roles);
        
        Collection<? extends GrantedAuthority> authorities = userDetails.getAuthorities();
        
        Assert.assertEquals(2, authorities.size());
        
        Iterator<? extends GrantedAuthority> itr = authorities.iterator();
        Assert.assertEquals("ROLE_USER", itr.next().getAuthority());
        Assert.assertEquals("ROLE_ADMIN", itr.next().getAuthority());
    }
    
    @Test
    public void testGetAuthorities_NoRoles() {
        List<Role> roles = new ArrayList<>();
        Mockito.when(user.getRoles()).thenReturn(roles);
        
        Collection<? extends GrantedAuthority> authorities = userDetails.getAuthorities();
        
        Assert.assertEquals(0, authorities.size());
    }
}
